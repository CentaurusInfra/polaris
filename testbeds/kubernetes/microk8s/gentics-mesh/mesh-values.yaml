# Values for Gentics Mesh.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Setting this higher than 1 will enable master clustering automatically
# In this case, be sure you have correctly configured a network storage for the uploads
replicaCount: 2

image:
  repository: gentics/mesh
  tag: 1.6.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}

securityContext: {}

service:
  type: NodePort

  mesh:
    port: 80
    nodePort: 30904

  meshSSL:
    port: 443

  monitoring:
    port: 8081

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        # We define multiple paths to allow us to retrieve distinct metrics for each of them
        - /api/v1/search/nodes
        - /api/v1/.+/nodes
        - /api/v1/.+/graphql
        - /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# You should adjust this to your needs. This just defines the absolute minimum defaults.
# The memory values should be set in conjunction with the Java Xmx plus other Java memory settings like Direct memory
# See: https://getmesh.io/docs/administration-guide/#_memory_settings
resources:
  limits:
    memory: 3Gi
    cpu: 4000m
  requests:
    memory: 2.5Gi
    cpu: 2000m

nodeSelector: {}

tolerations: []

affinity: {}

# Settings for clustering will be configured automatically
extraEnv:
- name: JAVA_TOOL_OPTIONS
  value: "-Xms2500m -Xmx2500m -XX:MaxDirectMemorySize=1024m -Dstorage.diskCache.bufferSize=1024"
- name: MESH_INITIAL_ADMIN_PASSWORD
  value: "admin"
- name: MESH_INITIAL_ADMIN_PASSWORD_FORCE_RESET
  value: "false"
- name: MESH_ELASTICSEARCH_URL
  value: "http://mesh-elasticsearch-es-http:9200"
- name: MESH_ELASTICSEARCH_COMPLIANCE_MODE
  value: ES_7

# By default, a default configmap will be created
# existingConfigmap: "mesh-custom-config"
# All settings in mesh.yml are configurable with env vars (See: extraEnv)

persistence:
  enabled: true

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, the PVC must be created manually before volume will be bound
  cluster:

    # Volumes for cluster instances graphdb
    graphdb:
      # existingClaim is available when replicaCount > 1
      # existingClaim: ""
      annotations: {}
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "local-storage"
        resources:
          requests:
            storage: 5Gi

  backup:
    ##  Storage for database snapshots
    snapshots:
      # Use existingClaim if you don't have a storage provisioner for your NFS
      # existingClaim: ""
      annotations: {}
      spec:
        accessModes:
          - ReadWriteMany
        storageClassName: "mocked-nfs-storage"
        resources:
          requests:
            storage: 5Gi

    # Volume for backup instance graphdb
    graphdb:
      # Claim for the db of the backup instance
      # existingClaim:
      annotations: {}
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "local-storage"
        resources:
          requests:
            storage: 5Gi

  # Volume for shared data (uploads, keystore)
  # This volume will only be created when replicaCount > 1
  # This volume should be a network volume (NFS) and will be shared across all instances
  shared:
    # Use existingClaim if you don't have a storage provisioner for your NFS
    # existingClaim: ""
    annotations: {}
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: "mocked-nfs-storage"
      resources:
        requests:
          storage: 5Gi

livenessProbe:
  httpGet:
    path: /api/v2/health/live
    port: http
  initialDelaySeconds: 120
  periodSeconds: 30
  failureThreshold: 20

readinessProbe:
  httpGet:
    path: /api/v2/health/ready
    port: http
  initialDelaySeconds: 120
  periodSeconds: 30
  failureThreshold: 20

vertxOptions:
  workerPoolSize: 20
  eventLoopSize: 10
  verticleCount: 10

keystore:
  # The name of an existing Kubernetes secret that contains the keystore
  # The keystore will also be automatically generated and persisted when clustering is not enabled.
  # The secret has to contain the following keys: "keystore.jceks", "password"
  secret: mesh-keystore-manual
  # Change this password. This will be used if no custom keystore secret has been specified.
  # password: "secret"

ssl:
  enabled: false
  # Client Authentication mode can be: NONE, REQUEST or REQUIRE
  # See https://getmesh.io/docs/references/#_client_certificate for details
  clientAuthMode: "NONE"
  serverKeyPath: "/certs/key.pem"
  serverCertPath: "/certs/cert.pem"
  #trustedCertPaths: ""
  existingSecret: "mesh-ssl-secret"

# Configure clustering related settings
cluster:
  enabled: true
  coordinatorMode: "ALL"
  coordinatorRegex: "gentics-mesh-[0-9]"
  writeQuorum: "\"majority\""
  readQuorum: 1

# Configure backup related settings
backup:
  enabled: false

  cron:
    # Daily at 22 pm
    schedule: "0 22 * * *"
    # Define the time limit for the backup in seconds
    timeLimitSeconds: 3600

    username: "admin"
    password: "admin"
    # Image for the CronJob which will invoke the backup
    # and transfer the files to the storage volume
    image:
      repository: docker.apa-it.at/gentics/mesh/mesh-tools
      tag: 1.0.2
      pullPolicy: IfNotPresent
      pullSecret: docker-apa-it-at

  image:
    repository: gentics/mesh
    tag: 1.6.0
    pullPolicy: IfNotPresent

# Configure credentials
credentials:
  initialAdminPassword: "admin"
  forcePasswordReset: false

config:
  publicKeys: ""

# Monitoring related settings
monitoring:
  enabled: true

# Elasticsearch settings
elasticsearch:
  url: "http://mesh-elasticsearch-es-http:9200"

# Upload settings
upload:
  limit: "262144000" ## 260 MB

setulimit:
  enabled: true

